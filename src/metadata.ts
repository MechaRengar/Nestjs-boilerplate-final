/* eslint-disable */
export default async () => {
    const t = {
        ["./common/dto/abstract.dto"]: await import("./common/dto/abstract.dto"),
        ["./constants/language-code"]: await import("./constants/language-code"),
        ["./modules/post/post.entity"]: await import("./modules/post/post.entity"),
        ["./modules/post/dtos/post-translation.dto"]: await import("./modules/post/dtos/post-translation.dto"),
        ["./modules/user/user.entity"]: await import("./modules/user/user.entity"),
        ["./modules/post/post-translation.entity"]: await import("./modules/post/post-translation.entity"),
        ["./constants/role-type"]: await import("./constants/role-type"),
        ["./modules/user/user-settings.entity"]: await import("./modules/user/user-settings.entity"),
        ["./constants/order"]: await import("./constants/order"),
        ["./common/dto/page-meta.dto"]: await import("./common/dto/page-meta.dto"),
        ["./modules/user/dtos/user.dto"]: await import("./modules/user/dtos/user.dto"),
        ["./modules/auth/dto/token-payload.dto"]: await import("./modules/auth/dto/token-payload.dto"),
        ["./common/dto/create-translation.dto"]: await import("./common/dto/create-translation.dto"),
        ["./modules/profiles/dto/create-profile.dto"]: await import("./modules/profiles/dto/create-profile.dto"),
        ["./modules/auth/dto/login-payload.dto"]: await import("./modules/auth/dto/login-payload.dto"),
        ["./modules/post/dtos/post.dto"]: await import("./modules/post/dtos/post.dto"),
        ["./modules/profiles/profiles.schema"]: await import("./modules/profiles/profiles.schema")
    };
    return { "@nestjs/swagger/plugin": { "models": [[import("./common/dto/abstract.dto"), { "AbstractDto": { id: { required: true, type: () => Number }, createdAt: { required: true, type: () => Object }, updatedAt: { required: true, type: () => Object }, translations: { required: false, type: () => [t["./common/dto/abstract.dto"].AbstractTranslationDto] } }, "AbstractTranslationDto": {} }], [import("./common/abstract.entity"), { "AbstractEntity": { id: { required: true, type: () => Number }, createdAt: { required: true, type: () => Number }, updatedAt: { required: true, type: () => Number }, translations: { required: false } }, "AbstractTranslationEntity": { languageCode: { required: true, enum: t["./constants/language-code"].LanguageCode } } }], [import("./modules/post/post-translation.entity"), { "PostTranslationEntity": { title: { required: true, type: () => String }, description: { required: true, type: () => String }, postId: { required: true, type: () => Number }, post: { required: false, type: () => t["./modules/post/post.entity"].PostEntity } } }], [import("./modules/post/dtos/post-translation.dto"), { "PostTranslationDto": { title: { required: false, type: () => String }, description: { required: false, type: () => String }, languageCode: { required: false, enum: t["./constants/language-code"].LanguageCode } } }], [import("./modules/post/dtos/post.dto"), { "PostDto": { title: { required: false, type: () => String }, description: { required: false, type: () => String }, info: { required: true, type: () => String }, translations: { required: false, type: () => [t["./modules/post/dtos/post-translation.dto"].PostTranslationDto] } } }], [import("./modules/post/post.entity"), { "PostEntity": { userId: { required: true, type: () => Number }, user: { required: true, type: () => t["./modules/user/user.entity"].UserEntity }, translations: { required: false, type: () => [t["./modules/post/post-translation.entity"].PostTranslationEntity] } } }], [import("./modules/user/dtos/user.dto"), { "UserDto": { firstName: { required: false, type: () => String, nullable: true }, lastName: { required: false, type: () => String, nullable: true }, username: { required: true, type: () => String }, role: { required: false, enum: t["./constants/role-type"].RoleType }, email: { required: false, type: () => String, nullable: true }, avatar: { required: false, type: () => String, nullable: true }, phone: { required: false, type: () => String, nullable: true }, isActive: { required: false, type: () => Boolean } } }], [import("./modules/user/user-settings.entity"), { "UserSettingsEntity": { isEmailVerified: { required: false, type: () => Boolean }, isPhoneVerified: { required: false, type: () => Boolean }, userId: { required: false, type: () => Number }, user: { required: false, type: () => t["./modules/user/user.entity"].UserEntity } } }], [import("./modules/user/user.entity"), { "UserEntity": { firstName: { required: true, type: () => String, nullable: true }, lastName: { required: true, type: () => String, nullable: true }, role: { required: true, enum: t["./constants/role-type"].RoleType }, email: { required: true, type: () => String, nullable: true }, password: { required: true, type: () => String, nullable: true }, phone: { required: true, type: () => String, nullable: true }, avatar: { required: true, type: () => String, nullable: true }, fullName: { required: true, type: () => String }, settings: { required: false, type: () => t["./modules/user/user-settings.entity"].UserSettingsEntity }, posts: { required: false, type: () => [t["./modules/post/post.entity"].PostEntity] } } }], [import("./modules/user/dtos/create-settings.dto"), { "CreateSettingsDto": { isEmailVerified: { required: false, type: () => Boolean }, isPhoneVerified: { required: false, type: () => Boolean } } }], [import("./common/dto/page-options.dto"), { "PageOptionsDto": { order: { required: true, enum: t["./constants/order"].Order }, page: { required: true, type: () => Number }, take: { required: true, type: () => Number }, q: { required: false, type: () => String } } }], [import("./common/dto/page-meta.dto"), { "PageMetaDto": { page: { required: true, type: () => Number }, take: { required: true, type: () => Number }, itemCount: { required: true, type: () => Number }, pageCount: { required: true, type: () => Number }, hasPreviousPage: { required: true, type: () => Boolean }, hasNextPage: { required: true, type: () => Boolean } } }], [import("./common/dto/page.dto"), { "PageDto": { data: { required: true }, meta: { required: true, type: () => t["./common/dto/page-meta.dto"].PageMetaDto } } }], [import("./modules/user/dtos/users-page-options.dto"), { "UsersPageOptionsDto": {} }], [import("./modules/auth/dto/user-register.dto"), { "UserRegisterDto": { firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, password: { required: true, type: () => String }, phone: { required: false, type: () => String } } }], [import("./modules/auth/dto/token-payload.dto"), { "TokenPayloadDto": { expiresIn: { required: true, type: () => Number }, token: { required: true, type: () => String } } }], [import("./modules/auth/dto/user-login.dto"), { "UserLoginDto": { email: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./modules/auth/dto/login-payload.dto"), { "LoginPayloadDto": { user: { required: true, type: () => t["./modules/user/dtos/user.dto"].UserDto }, accessToken: { required: true, type: () => t["./modules/auth/dto/token-payload.dto"].TokenPayloadDto }, refreshToken: { required: true, type: () => t["./modules/auth/dto/token-payload.dto"].TokenPayloadDto } } }], [import("./modules/auth/dto/refresh-token.dto"), { "RefreshTokenDto": { refreshToken: { required: true, type: () => String } } }], [import("./common/dto/create-translation.dto"), { "CreateTranslationDto": { languageCode: { required: true, enum: t["./constants/language-code"].LanguageCode }, text: { required: true, type: () => String } } }], [import("./modules/post/dtos/create-post.dto"), { "CreatePostDto": { title: { required: true, type: () => [t["./common/dto/create-translation.dto"].CreateTranslationDto] }, description: { required: true, type: () => [t["./common/dto/create-translation.dto"].CreateTranslationDto] } } }], [import("./modules/post/dtos/post-page-options.dto"), { "PostPageOptionsDto": {} }], [import("./modules/post/dtos/update-post.dto"), { "UpdatePostDto": {} }], [import("./modules/profiles/dto/create-profile.dto"), { "OSInfoDto": { type: { required: true, type: () => String }, version: { required: false, type: () => String } }, "BrowserInfoDto": { type: { required: true, type: () => String }, version: { required: false, type: () => String } }, "ScreenResolutionDto": { width: { required: true, type: () => Number }, height: { required: true, type: () => Number } }, "HardwareDto": { cpu_cores: { required: false, type: () => Number }, ram_gb: { required: false, type: () => Number }, screen_resolution: { required: false, type: () => t["./modules/profiles/dto/create-profile.dto"].ScreenResolutionDto }, fonts: { required: false, type: () => [String] } }, "CanvasDto": { mode: { required: true, type: () => String } }, "WebGLDto": { mode: { required: true, type: () => String }, vendor: { required: false, type: () => String }, renderer: { required: false, type: () => String } }, "AudioContextDto": { mode: { required: true, type: () => String } }, "SpeechsDto": { mode: { required: true, type: () => String }, voices: { required: false, type: () => [String] } }, "FingerprintDto": { canvas: { required: false, type: () => t["./modules/profiles/dto/create-profile.dto"].CanvasDto }, webgl: { required: false, type: () => t["./modules/profiles/dto/create-profile.dto"].WebGLDto }, audiocontext: { required: false, type: () => t["./modules/profiles/dto/create-profile.dto"].AudioContextDto }, speechs: { required: false, type: () => t["./modules/profiles/dto/create-profile.dto"].SpeechsDto } }, "MediaDevicesDto": { video_inputs: { required: false, type: () => Number }, audio_inputs: { required: false, type: () => Number }, audio_outputs: { required: false, type: () => Number } }, "ProxyConfigDto": { type: { required: true, type: () => String }, host: { required: false, type: () => String }, port: { required: false, type: () => Number }, username: { required: false, type: () => String }, password: { required: false, type: () => String }, geo: { required: false, type: () => String } }, "NetworkDto": { proxy: { required: false, type: () => t["./modules/profiles/dto/create-profile.dto"].ProxyConfigDto }, webrtc: { required: false, type: () => ({ mode: { required: true, type: () => String }, ip: { required: false, type: () => String } }) }, geolocation: { required: false, type: () => ({ mode: { required: true, type: () => String }, latitude: { required: false, type: () => Number }, longitude: { required: false, type: () => Number } }) }, timezone: { required: false, type: () => ({ mode: { required: true, type: () => String }, value: { required: false, type: () => String } }) } }, "UserAgentDto": { value: { required: true, type: () => String }, auto_generated: { required: false, type: () => Boolean } }, "LanguagesDto": { mode: { required: true, type: () => String }, list: { required: false, type: () => [String] } }, "PlatformDto": { name: { required: true, type: () => String }, tabs: { required: false, type: () => [String] } }, "BookmarkDto": { folder: { required: false, type: () => String }, name: { required: true, type: () => String }, url: { required: true, type: () => String } }, "CreateProfileDto": { name: { required: true, type: () => String }, description: { required: false, type: () => String }, os: { required: true, type: () => t["./modules/profiles/dto/create-profile.dto"].OSInfoDto }, browser: { required: true, type: () => t["./modules/profiles/dto/create-profile.dto"].BrowserInfoDto }, hardware: { required: false, type: () => t["./modules/profiles/dto/create-profile.dto"].HardwareDto }, fingerprint: { required: false, type: () => t["./modules/profiles/dto/create-profile.dto"].FingerprintDto }, media_devices: { required: false, type: () => t["./modules/profiles/dto/create-profile.dto"].MediaDevicesDto }, network: { required: false, type: () => t["./modules/profiles/dto/create-profile.dto"].NetworkDto }, user_agent: { required: false, type: () => t["./modules/profiles/dto/create-profile.dto"].UserAgentDto }, languages: { required: false, type: () => t["./modules/profiles/dto/create-profile.dto"].LanguagesDto }, plugin_ids: { required: false, type: () => [String] }, platform: { required: false, type: () => t["./modules/profiles/dto/create-profile.dto"].PlatformDto }, bookmarks: { required: false, type: () => [t["./modules/profiles/dto/create-profile.dto"].BookmarkDto] } } }], [import("./modules/profiles/dto/update-profile.dto"), { "UpdateProfileDto": { fullName: { required: false, type: () => String }, email: { required: false, type: () => String, format: "email" }, avatarUrl: { required: false, type: () => String }, bio: { required: false, type: () => String } } }], [import("./common/dto/response.dto"), { "ResponseDto": { success: { required: true, type: () => Boolean }, data: { required: false, type: () => Object }, message: { required: false, type: () => String }, total: { required: false, type: () => Number }, totalCount: { required: false, type: () => Number } } }], [import("./modules/plugin-group/dto/plugin-group.dto"), { "PluginGroupDto": { name: { required: true, type: () => String }, description: { required: false, type: () => String }, plugins: { required: false, type: () => [String] }, isActive: { required: false, type: () => Boolean } }, "CreatePluginGroupDto": {}, "UpdatePluginGroupDto": { name: { required: false, type: () => String }, description: { required: false, type: () => String }, plugins: { required: false, type: () => [String] }, isActive: { required: false, type: () => Boolean } } }]], "controllers": [[import("./modules/user/user.controller"), { "UserController": { "admin": {}, "getUsers": {}, "getUser": { type: t["./modules/user/dtos/user.dto"].UserDto } } }], [import("./modules/auth/auth.controller"), { "AuthController": { "userLogin": { type: t["./modules/auth/dto/login-payload.dto"].LoginPayloadDto }, "userRegister": { type: t["./modules/user/dtos/user.dto"].UserDto }, "refreshToken": { type: t["./modules/auth/dto/login-payload.dto"].LoginPayloadDto }, "getCurrentUser": { type: t["./modules/user/dtos/user.dto"].UserDto } } }], [import("./modules/health-checker/health-checker.controller"), { "HealthCheckerController": { "check": { type: Object } } }], [import("./modules/post/post.controller"), { "PostController": { "createPost": { type: t["./modules/post/dtos/post.dto"].PostDto }, "getPosts": {}, "getSinglePost": { type: t["./modules/post/dtos/post.dto"].PostDto }, "updatePost": {}, "deletePost": {} } }], [import("./modules/profiles/profiles.controller"), { "ProfilesController": { "create": {}, "findAll": { type: [t["./modules/profiles/profiles.schema"].Profile] }, "findOne": { type: t["./modules/profiles/profiles.schema"].Profile }, "update": { type: t["./modules/profiles/profiles.schema"].Profile }, "remove": {} } }], [import("./modules/plugin/plugin.controller"), { "PluginController": { "getAllPluginsByAccountId": { type: [Object] } } }], [import("./modules/plugin-group/plugin-group.controller"), { "PluginGroupController": { "findAll": { type: [Object] }, "findOne": {}, "create": { type: Object }, "update": { type: Object }, "remove": {} } }]] } };
};